---
name: Supply Chain
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      run-code-scanning:
        default: true
        type: boolean
        required: false
      codeql-code-scanning-category:
        default: codeql-code-scanning
        type: string
        required: false
      codeql-code-scanning-config-file:
        default: null
        type: string
        required: false
      codeql-go-version:
        default: "1.20"
        type: string
        required: false
      codeql-java-version:
        default: 17
        type: string
        required: false
      codeql-java-cache:
        default: null
        type: string
        required: false
      codeql-java-distribution:
        default: adopt
        type: string
        required: false
      code-scanning-timeout-minutes:
        default: 10
        type: number
        required: false
      tfsec-code-scanning-category:
        default: tfsec-code-scanning
        type: string
        required: false
    secrets: {}
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs:
      - dependency-review
      - code-scanning
      - tfsec
    steps:
      - run: "echo SUCCESS"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  code-scanning:
    name: CodeQL Scan
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.code-scanning-timeout-minutes }}
    if: ${{ inputs.run-code-scanning == true && github.event_name != 'pull_request' }}
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - uses: fabasoad/setup-enry-action@main
      - name: Detected Languages
        id: detected-languages
        run: echo "languages=$(enry | awk -F ' ' '{print $2}' | paste -sd ',' -)" >> $GITHUB_OUTPUT
      - uses: actions/github-script@v7
        name: Get CodeQL supported languages
        id: languages
        with:
          result-encoding: json
          script: |
            const enryCodeQLMapping = {
              'c#': 'csharp',
            };
            function getCodeQLLanguage(enryLang) {
              if (enryLang in enryCodeQLMapping) {
                return enryCodeQLMapping[enryLang];
              }
              return enryLang;
            }
            const detectedLanguages = '${{ steps.detected-languages.outputs.languages }}'.toLowerCase().split(',').map(language => {
              return getCodeQLLanguage(language)
            });
            const codeqlLanguages = ['cpp', 'csharp', 'go', 'ruby', 'python', 'java', 'javascript', 'typescript'];
            const languages = detectedLanguages.filter(language => codeqlLanguages.includes(language));
            return languages.join(',');
      - name: Set Go version
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.codeql-go-version }}
      - name: Set Java version
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.codeql-java-distribution }}
          java-version: ${{ inputs.codeql-java-version }}
          cache: ${{ inputs.codeql-java-cache }}
      - name: Initialize CodeQL
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/init@v2
        with:
          config-file: ${{ inputs.codeql-code-scanning-config-file }}
          languages: ${{ fromJSON(steps.languages.outputs.result) }}
      - name: Add coopnorge Nuget source
        if: contains(steps.languages.outputs.result, 'csharp')
        run: |
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/coopnorge/index.json"
      - name: Autobuild
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/analyze@v2
        with:
          category: ${{ inputs.codeql-code-scanning-category }}

  tfsec:
    name: tfsec Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Terrform files Count
        id: terraform_files
        run: echo "name=count::$(find . -name '*.tf' | wc -l | xargs)" >> $GITHUB_OUTPUT
      - name: tfsec
        if: steps.terraform_files.outputs.count != '0'
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        if: steps.terraform_files.outputs.count != '0'
        uses: github/codeql-action/upload-sarif@v2
        with:
          category: ${{ inputs.tfsec-code-scanning-category }}
          sarif_file: tfsec.sarif
