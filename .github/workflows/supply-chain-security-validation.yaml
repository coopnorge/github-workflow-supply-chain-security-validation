---
name: Supply Chain Security Validation
on:
  workflow_call:
    inputs:
      codeql-code-scanning-category:
        default: codeql-code-scanning
        type: string
        required: false
      codeql-code-scanning-config-file:
        default: null
        type: string
        required: false
      code-scanning-timeout-minutes:
        default: 10
        type: number
        required: false
      tfsec-code-scanning-category:
        default: tfsec-code-scanning
        type: string
        required: false
    secrets: {}
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs:
      - dependency-review
      - code-scanning
      - tfsec
    steps:
      - run: "echo SUCCESS"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Dependency Review
        uses: actions/dependency-review-action@v2

  code-scanning:
    name: CodeQL Scanning
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.code-scanning-timeout-minutes }}
    if: github.event_name != 'pull_request'
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - uses: fabasoad/setup-enry-action@main
      - name: Detected Languages
        id: detected-languages
        run: echo "::set-output name=languages::$(enry | awk -F ' ' '{print $2}' | paste -sd ',' -)"
      - uses: actions/github-script@v6
        name: Get CodeQL supported languages
        id: languages
        with:
          result-encoding: json
          script: |
            const detectedLanguages = '${{ steps.detected-languages.outputs.languages }}'.toLowerCase().split(',');
            const codeqlLanguages = ['cpp', 'csharp', 'go', 'ruby', 'python', 'java', 'javascript', 'typescript'];
            const languages = detectedLanguages.filter(language => codeqlLanguages.includes(language));
            return languages.join(',');
      - name: Initialize CodeQL
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/init@v2
        with:
          config-file: ${{ inputs.codeql-code-scanning-config-file }}
          languages: ${{Â fromJSON(steps.languages.outputs.result) }}
      - name: Autobuild
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/autobuild@v2
      - name: Perform CodeQL Analysis
        if: steps.languages.outputs.result != '""'
        uses: github/codeql-action/analyze@v2
        with:
          category: ${{ inputs.codeql-code-scanning-category }}

  tfsec:
    name: tfsec Scanning
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Terrform files Count
        id: terraform_files
        run: echo "::set-output name=count::$(find . -name '*.tf' | wc -l | xargs)"
      - name: tfsec
        if: steps.terraform_files.outputs.count != '0'
        uses: aquasecurity/tfsec-sarif-action@v0.1.3
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        if: steps.terraform_files.outputs.count != '0'
        uses: github/codeql-action/upload-sarif@v2
        with:
          category: ${{ inputs.tfsec-code-scanning-category }}
          sarif_file: tfsec.sarif
