---
name: Supply Chain
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_call:
    inputs:
      run-code-scanning:
        default: true
        type: boolean
        required: false
      codeql-code-scanning-category:
        default: codeql-code-scanning
        type: string
        required: false
      codeql-code-scanning-config-file:
        default: null
        type: string
        required: false
      codeql-go-version:
        default: "1.21"
        type: string
        required: false
      codeql-java-version:
        default: 17
        type: string
        required: false
      codeql-java-cache:
        default: null
        type: string
        required: false
      codeql-java-distribution:
        default: adopt
        type: string
        required: false
      code-scanning-timeout-minutes:
        default: 10
        type: number
        required: false
      tfsec-code-scanning-category:
        default: tfsec-code-scanning
        type: string
        required: false
    secrets: {}
jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    needs:
      - dependency-review
      - code-scanning
      - tfsec
    steps:
      - run: "echo SUCCESS"

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest

    if: github.event_name == 'pull_request'
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Dependency Review
        uses: actions/dependency-review-action@v3

  detect-languages:
    name: Detect Languages
    runs-on: ubuntu-latest
    if: ${{ inputs.run-code-scanning == true && github.event_name != 'pull_request' }}
    outputs:
      languages: ${{ toJson(fromJson(steps.languages.outputs.result).languages) }}
      go: ${{ fromJson(steps.languages.outputs.result).go }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - uses: fabasoad/setup-enry-action@main
      - name: Detected Languages
        id: detected-languages
        run: echo "languages=$(enry | awk -F ' ' '{print $2}' | paste -sd ',' -)" >> $GITHUB_OUTPUT
      - uses: actions/github-script@v7
        name: Get CodeQL supported languages
        id: languages
        with:
          result-encoding: json
          script: |
            const enryCodeQLMapping = {
              'c#': 'csharp',
            };
            function getCodeQLLanguage(enryLang) {
              if (enryLang in enryCodeQLMapping) {
                return enryCodeQLMapping[enryLang];
              }
              return enryLang;
            }
            const detectedLanguages = '${{ steps.detected-languages.outputs.languages }}'.toLowerCase().split(',').map(language => {
              return getCodeQLLanguage(language)
            });
            const codeqlLanguages = ['cpp', 'csharp', 'ruby', 'python', 'java', 'javascript', 'typescript'];
            const languages = detectedLanguages.filter(language => codeqlLanguages.includes(language));
            return {
              languages: languages,
              go: detectedLanguages.includes('go'),
            };

  find-go-projects:
    needs: detect-languages
    name: Find Go Sub Projects
    runs-on: ubuntu-latest
    if: needs.detect-languages.outputs.go
    outputs:
      go-projects: ${{ steps.find-go-projects.outputs.go-projects }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Find go projects
        id: find-go-projects
        run: |
          GO_PROJECTS=$(find . -maxdepth 4 -name go.mod -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')
          echo "found go projects: $GO_PROJECTS"
          echo "go-projects=$GO_PROJECTS" >> "$GITHUB_OUTPUT"
  
  go-code-scanning:
    needs:
      - detect-languages
      - find-go-projects
    name: CodeQL Scan (Go)
    runs-on: ubuntu-latest
    if: needs.detect-languages.outputs.go
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJSON(needs.find-go-projects.outputs.go-projects) }}
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            project:
              - ${{ matrix.project }}/**
      - uses: actions/setup-go@v4
        with:
          go-version-file: ${{ matrix.project }}/go.mod
          cache: false
      - name: Determine Golang cache paths
        id: go-env
        run: |
          echo "build-cache-path=$(go env GOCACHE)" >>"$GITHUB_OUTPUT"
          echo "module-cache-path=$(go env GOMODCACHE)" >>"$GITHUB_OUTPUT"
          echo "go-sum-file-path=${{ matrix.project }}/go.sum" >>"$GITHUB_OUTPUT"
      - name: Setup Golang Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-env.outputs.build-cache-path }}
            ${{ steps.go-env.outputs.module-cache-path }}
          key: ${{ runner.os }}-go-${{matrix.project}}-${{ hashFiles(steps.go-env.outputs.go-sum-file-path) }}
          restore-keys: |
            ${{ runner.os }}-go-${{matrix.project}}-${{ hashFiles(steps.go-env.outputs.go-sum-file-path) }}
            ${{ runner.os }}-go-${{matrix.project}}-
            ${{ runner.os }}-go-
      - uses: github/codeql-action/init@v3
        if: steps.changes.outputs.project == 'true'
        with:
          languages: go
          source-root: ${{ matrix.project }}
          queries: security-extended,security-and-quality
      - uses: github/codeql-action/autobuild@v3
        if: steps.changes.outputs.project == 'true'
        with:
          working-directory: ${{ matrix.project }}
      - uses: github/codeql-action/analyze@v3
        if: steps.changes.outputs.project == 'true'

  code-scanning:
    needs:
      - detect-languages
    name: CodeQL Scan
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.code-scanning-timeout-minutes }}
    if: ${{ inputs.run-code-scanning == true && github.event_name != 'pull_request' && fromJSON(needs.detect-languages.outputs.languages).length > 0 }}
    strategy:
      fail-fast: false
      matrix:
        language: ${{ fromJSON(needs.detect-languages.outputs.languages.languages) }}
    permissions:
      security-events: write
      actions: read
      contents: read
      packages: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set Java version
        if: ${{ matrix.language == 'java' }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.codeql-java-distribution }}
          java-version: ${{ inputs.codeql-java-version }}
          cache: ${{ inputs.codeql-java-cache }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          config-file: ${{ inputs.codeql-code-scanning-config-file }}
          languages: ${{ matrix.language }}
      - name: Add coopnorge Nuget source
        if: ${{ matrix.language == 'csharp' }}
        run: |
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/coopnorge/index.json"
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: ${{ inputs.codeql-code-scanning-category }}

  tfsec:
    name: tfsec Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Terrform files Count
        id: terraform_files
        run: echo "name=count::$(find . -name '*.tf' | wc -l | xargs)" >> $GITHUB_OUTPUT
      - name: tfsec
        if: steps.terraform_files.outputs.count != '0'
        uses: aquasecurity/tfsec-sarif-action@v0.1.4
        with:
          sarif_file: tfsec.sarif
      - name: Upload SARIF file
        if: steps.terraform_files.outputs.count != '0'
        uses: github/codeql-action/upload-sarif@v3
        with:
          category: ${{ inputs.tfsec-code-scanning-category }}
          sarif_file: tfsec.sarif
